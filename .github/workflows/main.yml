name: Build, Test and Package

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches: [main]

env:
  BUILD_DIR: build
  PACKAGE_DIR: package
  ARTIFACTS_DIR: artifacts
  PACKAGE_NAME: decorator-app

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine package version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          version=${GITHUB_REF#refs/tags/v}
        elif [ -f VERSION ]; then
          version=$(cat VERSION)
        else
          version=$(date +%Y.%m.%d)-$(git rev-parse --short HEAD)
        fi
        echo "version=${version}" >> $GITHUB_OUTPUT
        echo "PACKAGE_VERSION=${version}" >> $GITHUB_ENV
        echo "Using version: ${version}"
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          debhelper \
          dh-make \
          dpkg-dev \
          tree \
          libgtest-dev\
          googletest \           # Основная библиотека
          google-mock \
          libmock-dev
          
    - name: Configure project
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake -DCMAKE_BUILD_TYPE=Release ..
        
    - name: Build project
      run: |
        cd ${{ env.BUILD_DIR }}
        make -j$(nproc)
        
    - name: Run tests
      run: |
        cd ${{ env.BUILD_DIR }}
        ctest --output-on-failure
        
    - name: Prepare package structure
      run: |
        mkdir -p ${{ env.PACKAGE_DIR }}/usr/bin
        mkdir -p ${{ env.PACKAGE_DIR }}/DEBIAN
        install -Dm755 ${{ env.BUILD_DIR }}/decorator_app ${{ env.PACKAGE_DIR }}/usr/bin/decorator_app
        
    - name: Generate control file
      run: |
        cat <<EOF > ${{ env.PACKAGE_DIR }}/DEBIAN/control
        Package: ${{ env.PACKAGE_NAME }}
        Version: ${PACKAGE_VERSION}
        Section: devel
        Priority: optional
        Architecture: amd64
        Maintainer: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        Description: Decorator Pattern Implementation
        EOF 
    - name: Build .deb package
      run: |
        mkdir -p ${{ env.ARTIFACTS_DIR }}
        dpkg-deb --build ${{ env.PACKAGE_DIR }} ${{ env.ARTIFACTS_DIR }}/${{ env.PACKAGE_NAME }}_${PACKAGE_VERSION}_amd64.deb
        ls -la ${{ env.ARTIFACTS_DIR }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: ${{ env.ARTIFACTS_DIR }}/*.deb
        retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: deb-package
        path: ${{ runner.temp }}/deb-pkg
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Automated release for Decorator Pattern implementation
          Version: ${{ needs.build.outputs.version }}
        draft: false
        prerelease: false
        files: ${{ runner.temp }}/deb-pkg/*.deb
